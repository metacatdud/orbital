version: '3'

vars:
  GOP:
    sh: go env GOPATH
  VERSION_TAG:
    sh: git describe --tags --always
  VERSION_VERSION:
    sh: git log --date=iso --pretty=format:%cd -1
  VERSION_COMPILE:
    sh: date +"%F %T %z by $(go version)"
  VERSION_BRANCH:
    sh: git rev-parse --abbrev-ref HEAD
  GCFLAGS: -gcflags=all=-trimpath={{.GOP}}
  LDFLAGS: -ldflags="-s -w -X 'main.Version={{.VERSION_TAG}}' -X 'main.Compile={{.VERSION_COMPILE}}' -X 'main.Branch={{.VERSION_BRANCH}}'"

tasks:
  build:wasm:
    env:
      GOOS: js
      GOARCH: wasm
    cmds:
      - echo Building wasm file. OS $GOOS ARCH $GOARCH
      - go build -o orbital/web/orbital.wasm web/wasm/main.go
      - cp "$(go env GOROOT)/misc/wasm/wasm_exec.js" orbital/web/wasm_exec.js
  build:css:
    vars:
      proj_dir: '{{.PWD}}'
    cmds:
      - (cd web/tailwind && npx tailwindcss -i ./orbital.scss -o {{.proj_dir}}/orbital/web/orbital.css)

  wasm:
    cmds:
      - task: build:css
      - task: build:wasm

  orbital:linux:
    desc: Build Orbital for Linux
    silent: true
    env:
      GOOS: linux
      GOARCH: amd64
    cmds:
      - |
        echo "- Building for Linux..."
        echo "- Version: {{.VERSION_VERSION}}"
        echo "- Compiled on: {{.VERSION_COMPILE}}"
        echo "- Branch: {{.VERSION_BRANCH}}"
      - go build {{.GCFLAGS}} {{.LDFLAGS}} -o bin/orbital ./main.go